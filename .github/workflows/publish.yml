name: publish
on:
  push:
    branches:
      - master
  workflow_dispatch:

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

jobs:
  # job1:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout repo
  #       uses: actions/checkout@v3

  #     - name: Setup Node
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: 18.x

  #     - uses: pnpm/action-setup@v2
  #       name: Install pnpm
  #       with:
  #         version: 7.x
  #         run_install: false

  #     - name: Install dependencies
  #       run: pnpm install --no-frozen-lockfile --no-optional

  # - name: Install swc
  #   run: pnpm install -D vite-plugin-svgr

  # - name: lint
  #   run: pnpm run lint

  # - name: format
  #   run: pnpm run fmt.check

  # - name: Run unit test
  #   run: pnpm run test

  # job2:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout repo
  #       uses: actions/checkout@v3

  # - name: Setup Node
  #   uses: actions/setup-node@v3
  #   with:
  #     node-version: 18.x

  # - uses: pnpm/action-setup@v2
  #   name: Install pnpm
  #   with:
  #     version: 7.x
  #     run_install: false

  # - name: Install dependencies
  #   run: pnpm install --no-frozen-lockfile --no-optional

  # - name: Install swc
  #   run: pnpm install -D vite-plugin-svgr

  # - name: Install Playwright Browsers
  #   run: npx playwright install --with-deps
  # - name: Run Playwright tests
  #   run: npx playwright test
  # - uses: actions/upload-artifact@v3
  #   if: always()
  #   with:
  #     name: playwright-report
  #     path: playwright-report/
  #     retention-days: 30

  # job3:
  #   needs: [job1, job2]
  publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - uses: pnpm/action-setup@v2
        name: Install pnpm
        with:
          version: 7.x
          run_install: false

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
          cache: pnpm

      - name: Restore cache
        uses: actions/cache@v3
        with:
          # See here for caching with `yarn` https://github.com/actions/cache/blob/main/examples.md#node---yarn or you can leverage caching with actions/setup-node https://github.com/actions/setup-node
          path: |
            ~/.npm
            ${{ github.workspace }}/.next/cache
          # Generate a new cache whenever packages or source files change.
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**/*.js', '**/*.jsx', '**/*.ts', '**/*.tsx') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-
      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile

      - name: Build application
        run: pnpm build

      - name: Run tests
        run: pnpm start & pnpm test

      # - run: pnpm install
      # - run: pnpm vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
      # - run: pnpm vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
      # - run: pnpm vercel deploy --prod --prebuilt --token=${{ secrets.VERCEL_TOKEN }}
